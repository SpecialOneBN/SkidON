name: Performance Testing

on:
  schedule:
    - cron: '0 3 * * *' # Каждый день в 3:00 UTC
  workflow_dispatch:
    inputs:
      duration:
        description: 'Test duration (e.g., 30s, 5m)'
        required: false
        default: '2m'
      rps:
        description: 'Requests per second'
        required: false
        default: '100'

jobs:
  load-test:
    name: Load Testing with K6
    runs-on: ubuntu-latest

    services:
      skidon-test:
        image: ghcr.io/${{ github.repository }}/api-gateway:latest
        ports:
          - 8080:8080
        env:
          DATABASE_URL: postgres://testuser:testpass@postgres:5432/testdb
          REDIS_URL: redis://redis:6379

      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for services
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:8080/health; do sleep 2; done'

      - name: Run K6 Load Test
        uses: grafana/k6-action@v0.3.1
        with:
          filename: scripts/load-test.js
        env:
          K6_DURATION: ${{ github.event.inputs.duration || '2m' }}
          K6_RPS: ${{ github.event.inputs.rps || '100' }}
          BASE_URL: http://localhost:8080

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: k6-results
          path: |
            results.json
            performance-report.html

  benchmark:
    name: Go Benchmark Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -count=3 ./... | tee benchmark.txt

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'go'
          output-file-path: benchmark.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          alert-threshold: '150%'